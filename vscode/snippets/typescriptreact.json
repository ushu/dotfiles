{
	"RN Component": {
		"prefix": "rncomp",
		"description": "RN Component (boilerplate)",
		"body": [
			"import React from \"react\"",
			"import { View, StyleSheet } from \"react-native\"",
			"",
			"type Props = {}",
			"",
			"const $1: React.FC<Props> = () => {",
			"  return <View style={styles.container}>$0</View>",
			"}",
			"",
			"const styles = StyleSheet.create({",
			"  container: {",
			"    flex: 1,",
			"  }",
			"})",
			"",
			"export default $1"
		]
	},
	"RN Icon Component": {
		"prefix": "rnicon",
		"body": [
			"import React from \"react\"",
			"import { Image, ImageProps } from \"react-native\"",
			"import source from \"./images/$1.png\"",
			"",
			"type Props = Omit<ImageProps, \"source\">",
			"",
			"const $1: React.FC<Props> = props => (",
			"  <Image source={source} {...props} />",
			")",
			"",
			"export default $1$0"
		],
		"description": "RN Icon (image) component"
	},
	"RN CLICKABLE Icon Component": {
		"prefix": "rnclickableicon",
		"body": [
			"import React from \"react\"",
			"import { Image, ImageProps, TouchableOpacity, TouchableOpacityProps } from \"react-native\"",
			"import source from \"./images/$1.png\"",
			"",
			"type Props = TouchableOpacityProps & {",
			"  imageProps?: Omit<ImageProps, \"source\">",
			"}",
			"",
			"const $1: React.FC<Props> = ({ imageProps, ...props }) => (",
			"  <TouchableOpacity {...props}>",
			"    <Image source={source} {...imageProps} />",
			"  </TouchableOpacity>",
			")",
			"",
			"export default $1$0"
		],
		"description": "RN Icon (image) component"
	},
	"RN TextInupt EMAIL attributes": {
		"prefix": "rntfemail",
		"body": [
			"placeholder=\"${1:Email address}\"",
			"keyboardType=\"email-address\"",
			"autoCapitalize=\"none\"",
			"textContentType=\"emailAddress\""
		],
		"description": "attributes for email text field"
	},
	"RN TextInupt PHONE NUMBER attributes": {
		"prefix": "rntfname",
		"body": [
			"placeholder=\"${1:Phone number}\"",
			"keyboardType=\"phone-pad\"",
			"autoCapitalize=\"none\"",
			"textContentType=\"telephoneNumber\""
		],
		"description": "attributes for email text field"
	},
	"RN TextInupt PASSWORD attributes": {
		"prefix": "rntfpassword",
		"body": [
			"placeholder=\"${1:Password}\"",
			"keyboardType=\"default\"",
			"autoCapitalize=\"none\"",
			"textContentType=\"${2:password}\" /* or \"newPassword\"*/",
			"secureTextEntry={true}"
		],
		"description": "attributes for password text field"
	},
	"RN TextInupt NAME attributes": {
		"prefix": "rntfname",
		"body": [
			"placeholder=\"${1:First name}\"",
			"keyboardType=\"default\"",
			"autoCapitalize=\"words\"",
			"textContentType=\"${2:givenName}\" /* or \"familyName\"*/"
		],
		"description": "attributes for email text field"
	},
	"reducer": {
		"prefix": "reducer",
		"description": "(use)Reducer boilerplate",
		"body": [
			"type State = ",
			"| { name: \"$1\" }",
			"",
			"type Action = ",
			"| { type: \"$2\" }",
			"",
			"const reducer = (state: State, action: Action): State => {",
			"  switch(state.name) {",
			"    case \"$1\":",
			"      switch(action.type) {",
			"        case \"$2\":",
			"          $0",
			"      }",
			"  }",
			"}",
			""
		]
	}
}